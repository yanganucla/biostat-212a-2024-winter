---
title: "Biostat 212a Homework 5"
subtitle: "Due Mar 11, 2024 @ 11:59PM"
author: "Yang An and UID:106332601"
date: today
format:
  html:
    theme: cosmo
    embed-resources: true
    number-sections: true
    toc: true
    toc-depth: 4
    toc-location: left
    code-fold: false
engine: knitr
knitr:
  opts_chunk: 
    fig.align: 'center'
    # fig.width: 6
    # fig.height: 4
    message: FALSE
    cache: false
---

## ISL Exercise 9.7.1 (10pts)
1. This problem involves hyperplanes in two dimensions.
(a) Sketch the hyperplane 1 + 3X1 − X2 = 0. Indicate the set of points for 
which 1+3X1 −X2 > 0, as well as the set of points for which 1 + 3X1 − X2 < 0.
(b) On the same plot, sketch the hyperplane −2 + X1 + 2X2 = 0. Indicate the 
set of points for which −2 + X1 + 2X2 > 0, as well as the set of points for
which−2+X1+2X2 <0.
**Answer**
（a)
Plotting the line: 1+3X1−X2=0⟺X2=3X1+1
Rearranging for X2 makes it clear which side of the hyperplane is which:
1+3X1−X2<0⟺X2>1+3X1
1+3X1−X2>0⟺X2<1+3X1
```{r}
library(ggplot2)
library(dplyr)
library(latex2exp)

X1 <- -10:10
X2 <- 3*X1 + 1

df1 <- data.frame(X1, X2, line = "a")

grid <- expand.grid(X1 = seq(min(df1$X1), max(df1$X1), length.out = 150), 
                    X2 = seq(min(df1$X2), max(df1$X2), length.out = 150)) %>%
  mutate(region = case_when(1 + 3*X1 - X2 < 0 ~ "lt 0", 
                            1 + 3*X1 - X2 > 0 ~ "gt 0"))

ggplot(grid, aes(x = X1, y = X2)) + 
  geom_tile(aes(fill = region), alpha = 0.5) + 
  geom_line(data = df1, aes(x = X1, y = X2), size = 1, col = "purple") + 
  annotate("text", x = -5, y = 10, 
           label = TeX("$1 + 3X_1 - X_2 < 0$", output = "character"),
           hjust = 0.5, size = 4, parse = TRUE, col = "black") + 
  annotate("text", x = 5, y = -10, 
           label = TeX("$1 + 3X_1 - X_2 > 0$", output = "character"),
           hjust = 0.5, size = 4, parse = TRUE, col = "black") + 
  scale_fill_manual(values = c("blue", "green")) +
  scale_x_continuous(expand = c(0.01,0.01), breaks = seq(-10, 10, 2)) +
  scale_y_continuous(expand = c(0.01,0.01), breaks = seq(-30, 30, 10)) +
  theme(legend.position = "none") + 
  labs(title = TeX(r'(Hyperplane Plot: $1 + 3X_1 - X_2 = 0$)'), 
       x = TeX(r'($X_1$)'), 
       y = TeX(r'($X_2$)'))


```
（b)
Plotting the line: −2+X1+2X2=0⟺X2=−X1/2+1
Rearranging for X2 makes it clear which side of the hyperplane is which:
−2+X1+2X2<0⟺X2<−X1/2+1
−2+X1+2X2>0⟺X2>−X1/2+1
```{r}
library(ggplot2)
library(dplyr)
library(latex2exp)
X1 <- -10:10
X2 <- 1 - 0.5*X1

df2 <- data.frame(X1, X2, line = "b")

grid <- grid %>%
  mutate(region = case_when(-2 + X1 + 2*X2 < 0 ~ "lt 0", 
                            -2 + X1 + 2*X2 > 0 ~ "gt 0"))

ggplot(grid, aes(x = X1, y = X2)) + 
  geom_tile(aes(fill = region), alpha = 0.5) + 
  geom_line(data = df2, aes(x = X1, y = X2), size = 1, col = "purple") + 
  annotate("text", x = 2.5, y = 15, 
           label = TeX("$-2 + X_1 + 2X_2 > 0$", output = "character"),
           hjust = 0.5, size = 4, parse = TRUE, col = "black") + 
  annotate("text", x = -2.5, y = -15, 
           label = TeX("$-2 + X_1 + 2X_2 < 0$", output = "character"),
           hjust = 0.5, size = 4, parse = TRUE, col = "black") + 
  scale_fill_manual(values = c("blue", "green")) +
  scale_x_continuous(expand = c(0.01,0.01), breaks = seq(-10, 10, 2)) +
  scale_y_continuous(expand = c(0.01,0.01), breaks = seq(-30, 30, 10)) +
  theme(legend.position = "none") + 
  labs(title = TeX("Hyperplane Plot: $-2 + X_1 + 2X_2 = 0$"), 
       x = TeX("($X_1$)"), 
       y = TeX("($X_2$)"))

```
```{r}
library(ggplot2)
library(dplyr)
library(latex2exp)
bind_rows(df1, df2) %>%
  ggplot(aes(x = X1, y = X2, col = line)) + 
  geom_line(size = 1) + 
  scale_color_manual(values = c("green", "blue"), 
                     labels = unname(TeX(c("$1 + 3X_1 - X_2 = 0", "$-2 + X_1 + 2*X_2 = 0$")))) + 
  scale_x_continuous(breaks = seq(-10, 10, 2)) +
  scale_y_continuous(breaks = seq(-30, 30, 10)) +
  labs(x = TeX(r'($X_1$)'), 
       y = TeX(r'($X_2$)'), 
       col = "Hyperplane:") + 
  theme(legend.position = "bottom")
```
## ISL Exercise 9.7.2 (10pts)
2. We have seen that in p = 2 dimensions, a linear decision boundary takes the 
form β0 +β1X1 +β2X2 = 0. We now investigate a non-linear decision boundary.
(a) Sketch the curve
(1+X1)2 +(2−X2)2 =4.
(b) On your sketch, indicate the set of points for which
(1+X1)2 +(2−X2)2 >4, as well as the set of points for which
(1+X1)2 +(2−X2)2 ≤4.
(c) Suppose that a classifier assigns an observation to the blue class
if
and to the red class otherwise. To what class is the observation
(1+X1)2 +(2−X2)2 >4, (0, 0) classified? (−1, 1)? (2, 2)? (3, 8)?
(d) Argue that while the decision boundary in (c) is not linear in terms of X1
and X2, it is linear in terms of X1, X12, X2, and X2 .

**Answer**
(a)
the curve is a circle with center (−1,2) and radius 2
(1+X1)^2+(2−X2)^2=4
(X1−(−1))^2+((−1)(X2−2))^2=4
(X1−(−1))^2+(X2−2)^2=2^2
```{r}
library(ggplot2)

# Define the circle's data
create_circle <- function(x_center, y_center, radius, n_points = 100) {
  t <- seq(0, 2 * pi, length.out = n_points)
  x <- x_center + radius * cos(t)
  y <- y_center + radius * sin(t)
  data.frame(x, y)
}
circle_data <- data.frame(X1 = -1, X2 = 2, r = 2)

# Create ggplot object
ggplot() + 
   geom_point(data = create_circle(-1, 2, 2), aes(x, y), 
             color = "mediumseagreen", size = 1) + 
  scale_x_continuous(expand = c(0.01, 0.01), limits = c(-3.5, 1.5)) +
  scale_y_continuous(expand = c(0.01, 0.01), limits = c(-0.5, 4.5)) +
  labs(
    title = TeX(r'(Curve Plot: $(1 + X_1)^2 + (2 - X_2)^2 = 4$)'),
    x = TeX(r'($X_1$)'),
    y = TeX(r'($X_2$)')
  ) +
  coord_fixed()

```
(b)
The set of points for which (1+X1)2 +(2−X2)2 >4 is the set of points outside the circle, and the set of points for which (1+X1)2 +(2−X2)2 ≤4 is the set of points inside the circle. 
```{r}
library(ggplot2)
library(dplyr)

# Define custom function to create a circle
create_circle <- function(x_center, y_center, radius, n_points = 100) {
  t <- seq(0, 2 * pi, length.out = n_points)
  x <- x_center + radius * cos(t)
  y <- y_center + radius * sin(t)
  data.frame(x, y)
}

# Generate grid data
grid <- expand.grid(X1 = seq(-3.5, 1.5, length.out = 200), 
                    X2 = seq(-0.5, 4.5, length.out = 200)) %>%
  mutate(region = ifelse((1 + X1)^2 + (2 - X2)^2 > 4, "gt 4", "le 4"))

# Create ggplot object
ggplot() + 
  geom_tile(data = grid, aes(x = X1, y = X2, fill = region), alpha = 0.5) + 
  geom_point(data = create_circle(-1, 2, 2), aes(x, y), 
             color = "mediumseagreen", size = 1) + 
  annotate("text", x = -1, y = 2, 
           label = TeX("$(1 + X_1)^2 + (2 - X_2)^2 \\leq 4$"), 
           hjust = 0.5, size = 4, parse = TRUE, col = "red") + 
  annotate("text", x = 0.5, y = 0, 
           label = TeX("$(1 + X_1)^2 + (2 - X_2)^2 > 4$"), 
           hjust = 0.5 , size = 2, parse = TRUE, col = "blue") + 
  scale_x_continuous(expand = c(0.01,0.01), limits = c(-3.5, 1.5)) + 
  scale_y_continuous(expand = c(0.01,0.01), limits = c(-0.5, 4.5)) + 
  scale_fill_manual(values = c("#00BFC4", "#F8766D")) +
  theme(legend.position = "none") + 
  labs(title = TeX(r'(Curve Plot: $(1 + X_1)^2 + (2 - X_2)^2 = 4$)'), 
       x = TeX(r'($X_1$)'), 
       y = TeX(r'($X_2$)')) + 
  coord_fixed()

```
(c)
The observation (1+X1)2 +(2−X2)2 >4, (0, 0) is classified as blue, (−1, 1) is 
classified as red, (2, 2) is classified as blue, and (3, 8) is classified as 
blue.
```{r}
library(ggplot2)
library(dplyr)

# Define custom function to create a circle
create_circle <- function(x_center, y_center, radius, n_points = 100) {
  t <- seq(0, 2 * pi, length.out = n_points)
  x <- x_center + radius * cos(t)
  y <- y_center + radius * sin(t)
  data.frame(x, y)
}

# Define data for new observations
new_obs <- data.frame(X1 = c(0, -1, 2, 3), X2 = c(0, 1, 2, 8)) %>%
  mutate(region = ifelse((1 + X1)^2 + (2 - X2)^2 > 4, "gt 4", "le 4"))

# Generate grid data
grid <- expand.grid(X1 = seq(-3.5, 3.5, length.out = 200), 
                    X2 = seq(-0.5, 8.5, length.out = 200)) %>%
  mutate(region = ifelse((1 + X1)^2 + (2 - X2)^2 > 4, "gt 4", "le 4"))

# Create ggplot object
ggplot() + 
  geom_tile(data = grid, aes(x = X1, y = X2, fill = region), alpha = 0.5) + 
  geom_path(data = create_circle(-1, 2, 2), aes(x, y),
            col = "mediumseagreen", size = 1) + 
  geom_point(data = new_obs, aes(x = X1, y = X2, col = region)) + 
  scale_x_continuous(expand = c(0.01,0.01), limits = c(-3.5, 3.5)) + 
  scale_y_continuous(expand = c(0.01,0.01), limits = c(-0.5, 8.5)) + 
  scale_fill_manual(values = c("#00BFC4", "#F8766D")) +
  scale_color_manual(values = c("blue", "red")) +
  theme(legend.position = "none") + 
  labs(title = TeX(r'(Classifier Plot: $f(X) = (1 + X_1)^2 + (2 - X_2)^2 - 4$)'
                   ), 
       x = TeX(r'($X_1$)'), 
       y = TeX(r'($X_2$)')) + 
  coord_fixed()

```
(d)

The decision boundary is defined as the boundary where the function f(X) changes 
its sign. In this case, f(X)=0 represents the boundary because it's where the 
prediction changes.
$$\begin{align*}
f(X) & \Rightarrow f(X) = 0 \\
& = (1 + X_1)^2 + (2 - X_2)^2 - 4 \\
& = X_1^2 + 2X_1 + 1 + X_2^2 - 4X_2 + 4 - 4 \\
& = X_1^2 + X_2^2 + 2X_1 - 4X_2 + 1 \\
& = (1)(X_1^2) + (1)(X_2^2) + (2)(X_1) + (-4)(X_2) + 1 = 0
\end{align*}$$
From the final form we can see how f(X)=0 is expressed in the form a1Z1+a2Z2+
a3Z3+a4Z4+b=0 for (Z1,Z2,Z3,Z4)=(X21,X22,X1,X2), and therefore it is linear 
in terms of x1, x1^2, x2, and x2^2. Thus, the decision boundary is a circle in 
the feature space. 

## Support vector machines (SVMs) on the `Carseats` data set (30pts)

Follow the machine learning workflow to train support vector classifier (same 
as SVM with linear kernel), SVM with polynomial kernel (tune the degree and 
regularization parameter $C$), and SVM with radial kernel (tune the scale 
parameter $\gamma$ and regularization parameter $C$) for classifying `Sales<=8` 
versus `Sales>8`. Use the same seed as in your HW4 for the initial test/train 
split and compare the final test AUC and accuracy to those methods you tried 
in HW4.

## Bonus (10pts)

Let
$$
f(X) = \beta_0 + \beta_1 X_1 + \cdots + \beta_p X_p = \beta_0 + \beta^T X. 
$$
Then $f(X)=0$ defines a hyperplane in $\mathbb{R}^p$. Show that $f(x)$ is proportional to the signed distance of a point $x$ to the hyperplane $f(X) = 0$. 
